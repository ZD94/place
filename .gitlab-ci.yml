variables:
  DOCKER_REG: dk.jingli365.com
  DOCKER_NAME: $CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME
  DOCKER_CI_NAME: $DOCKER_REG/$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME:$CI_COMMIT_SHA
  DOCKER_BRANCH_NAME: $DOCKER_REG/$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG
  JL_APP_PORT: 8080
  JL_APP_REDIS: "redis://l.jingli365.com:16379"
stages:
  - build
  - docker
  - deploy

image: docker:git

before_script:
  - 'eval $(ssh-agent -s) && echo "$SSH_PRIVATE_KEY" | ssh-add -'
  - 'mkdir -p ~/.ssh && echo -e "Host *\n\tStrictHostKeyChecking no\n\tSendEnv JL_APP_*\n\n" > ~/.ssh/config'

build:dist:
  stage: build
  only:
    - branches
  image: $DOCKER_REG/jl-build:v4
  tags:
    - serial
  cache:
    key: $CI_PIPELINE_ID
    paths:
      - dist/
  script:
    - npmcache
    - npm install
    - npm run dist

build:image:
  stage: docker
  cache:
    key: $CI_PIPELINE_ID
    paths:
      - dist/
  script:
    - docker login -u dockeruser -p $DOCKER_PASSWD $DOCKER_REG
    - docker build -t $DOCKER_CI_NAME . --build-arg NPM_TOKEN=$NPM_TOKEN
    - docker push $DOCKER_CI_NAME

.deploy_template: &deploy_template
  stage: deploy
  environment:
    name: $ENVIROMENT_NAME
    url: https://$ENVIROMENT_HOST/proj/$DOCKER_NAME/
  script:
    - docker login -u dockeruser -p $DOCKER_PASSWD $DOCKER_REG
    - docker pull $DOCKER_CI_NAME
    - docker tag $DOCKER_CI_NAME $DOCKER_BRANCH_NAME
    - docker push $DOCKER_BRANCH_NAME
    - echo deploy to https://$ENVIROMENT_HOST
    - ssh test@$ENVIROMENT_HOST /home/test/bin/docker_service.sh $DOCKER_REG $DOCKER_NAME $CI_COMMIT_REF_SLUG $CI_ENVIRONMENT_SLUG -p $JL_APP_PORT

deploy:master:
  <<: *deploy_template
  only:
    - /^master$/
  variables:
    ENVIROMENT_NAME: master
    ENVIROMENT_HOST: l.jingli365.com
    JL_APP_POSTGRES_URL: "postgres://times:time0418@l.jingli365.com:15432/jlplace_new"

deploy:test:
  <<: *deploy_template
  only:
    - /^test$/
    - /^review\//
  when: manual
  variables:
    ENVIROMENT_NAME: test
    ENVIROMENT_HOST: t.jingli365.com
    JL_APP_POSTGRES_URL: "postgres://times:time0418@l.jingli365.com:15432/jlplace_new"

deploy:release:
  <<: *deploy_template
  only:
    - /^release$/
  when: manual
  variables:
    ENVIROMENT_NAME: release
    ENVIROMENT_HOST: j.jingli365.com
    JL_APP_POSTGRES_URL: "postgres://jingli:J1n9L1.t3ch@j.jingli365.com:5432/jlplace"
    JL_APP_REDIS: "redis://j.jingli365.com:6379"
